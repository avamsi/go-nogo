on:
  workflow_call:
    inputs:
      runs-on:
        required: true
        type: string

jobs:
  resolve-modules:
    # TODO: it would be better to use the relative path to resolve-modules.yml
    # here but it doesn't work with act (yet -- nektos/act#1875).
    uses: avamsi/go-nogo/.github/workflows/resolve-modules.yml@main

  lint:
    needs: resolve-modules
    runs-on: ${{ inputs.runs-on }}
    strategy:
      matrix:
        module: ${{ fromJson(needs.resolve-modules.outputs.modules) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: stable
      - uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          working-directory: ${{ matrix.module }}
          # TODO: consider enabling revive too.
          args: --enable=gofumpt,gosec,misspell,prealloc

  generate:
    needs: resolve-modules
    runs-on: ${{ inputs.runs-on }}
    strategy:
      matrix:
        module: ${{ fromJson(needs.resolve-modules.outputs.modules) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: stable
      - shell: bash
        working-directory: ${{ matrix.module }}
        # TODO: should we limit git status to just the working directory?
        # Also, should we run git status beforehand to check for changes?
        run: |
          set -x
          go generate -v ./...
          git status --porcelain | tee /dev/full

  mod-tidy:
    needs: resolve-modules
    runs-on: ${{ inputs.runs-on }}
    strategy:
      matrix:
        module: ${{ fromJson(needs.resolve-modules.outputs.modules) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: stable
      - shell: bash
        working-directory: ${{ matrix.module }}
        # TODO: should we run git status beforehand to check for changes?
        run: |
          set -x
          go mod tidy
          git status --porcelain | tee /dev/full

  build-and-test:
    needs: resolve-modules
    runs-on: ${{ inputs.runs-on }}
    strategy:
      matrix:
        module: ${{ fromJson(needs.resolve-modules.outputs.modules) }}
      fail-fast: false
    defaults:
      run:
        working-directory: ${{ matrix.module }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: stable
      - run: go build -v ./...
      - run: go test  -v ./...
      # Test with -race and -count=10000 if both build and (vanilla) test are
      # successful, but it's probably overkill to run them on every commit, so
      # run them an order of magnitude less often (by using the commit SHA).
      # TODO: ideally, we'd have a way of forcing this as it's possible for
      # subsequent commits after a failure to not contain ff in the SHA.
      - if: ${{ contains(github.sha, 'ff') }}
        run: |
          set -x
          go test -v ./... -race
          go test    ./... -count=10000
